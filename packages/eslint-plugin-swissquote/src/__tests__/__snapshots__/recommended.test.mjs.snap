// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Incorrect usage of hooks: fails with setState in componentDidMount//0`] = `Array [
  Object {
    "column": 16,
    "endColumn": 23,
    "endLine": 5,
    "line": 5,
    "message": "'setName' is assigned a value but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
    "suggestions": Array [
      Object {
        "data": Object {
          "varName": "setName",
        },
        "desc": "Remove unused variable 'setName'.",
        "fix": Object {
          "range": Array [
            135,
            144,
          ],
          "text": "",
        },
        "messageId": "removeVar",
      },
    ],
  },
  Object {
    "column": 5,
    "endColumn": 14,
    "endLine": 9,
    "line": 9,
    "message": "React Hook \\"useEffect\\" is called conditionally. React Hooks must be called in the exact same order in every component render.",
    "nodeType": "Identifier",
    "ruleId": "@swissquote/swissquote/react-hooks/rules-of-hooks",
    "severity": 2,
  },
  Object {
    "column": 19,
    "endColumn": 29,
    "endLine": 15,
    "line": 15,
    "message": "'setSurname' is assigned a value but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
    "suggestions": Array [
      Object {
        "data": Object {
          "varName": "setSurname",
        },
        "desc": "Remove unused variable 'setSurname'.",
        "fix": Object {
          "range": Array [
            372,
            384,
          ],
          "text": "",
        },
        "messageId": "removeVar",
      },
    ],
  },
]`;

exports[`Uses sonar plugin//0`] = `Array [
  Object {
    "column": 10,
    "endColumn": 22,
    "endLine": 3,
    "line": 3,
    "message": "'changeWindow' is defined but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
    "suggestions": Array [
      Object {
        "data": Object {
          "varName": "changeWindow",
        },
        "desc": "Remove unused variable 'changeWindow'.",
        "fix": Object {
          "range": Array [
            65,
            273,
          ],
          "text": "",
        },
        "messageId": "removeVar",
      },
    ],
  },
]`;

exports[`Warns on console.log//0`] = `Array [
  Object {
    "column": 1,
    "endColumn": 12,
    "endLine": 1,
    "line": 1,
    "message": "Unexpected console statement.",
    "messageId": "unexpected",
    "nodeType": "MemberExpression",
    "ruleId": "no-console",
    "severity": 1,
    "suggestions": Array [
      Object {
        "data": Object {
          "propertyName": "log",
        },
        "desc": "Remove the console.log().",
        "fix": Object {
          "range": Array [
            0,
            20,
          ],
          "text": "",
        },
        "messageId": "removeConsole",
      },
    ],
  },
]`;

exports[`Works fine with ES6 code//0`] = `Array [
  Object {
    "column": 7,
    "endColumn": 18,
    "endLine": 1,
    "line": 1,
    "message": "'SkinnedMesh' is defined but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
    "suggestions": Array [
      Object {
        "data": Object {
          "varName": "SkinnedMesh",
        },
        "desc": "Remove unused variable 'SkinnedMesh'.",
        "fix": Object {
          "range": Array [
            0,
            474,
          ],
          "text": "",
        },
        "messageId": "removeVar",
      },
    ],
  },
  Object {
    "column": 27,
    "endColumn": 32,
    "endLine": 1,
    "line": 1,
    "message": "'THREE' is not defined.",
    "messageId": "undef",
    "nodeType": "Identifier",
    "ruleId": "no-undef",
    "severity": 2,
  },
  Object {
    "column": 16,
    "endColumn": 21,
    "endLine": 21,
    "line": 21,
    "message": "'THREE' is not defined.",
    "messageId": "undef",
    "nodeType": "Identifier",
    "ruleId": "no-undef",
    "severity": 2,
  },
  Object {
    "column": 8,
    "endColumn": 39,
    "endLine": 25,
    "fix": Object {
      "range": Array [
        483,
        514,
      ],
      "text": "
  op: a,
  lhs: { op: b },
  rhs: c
",
    },
    "line": 25,
    "message": "Replace \`·op:·a,·lhs:·{·op:·b·},·rhs:·c·\` with \`⏎··op:·a,⏎··lhs:·{·op:·b·},⏎··rhs:·c⏎\`",
    "messageId": "replace",
    "nodeType": null,
    "ruleId": "@swissquote/swissquote/prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 14,
    "endLine": 25,
    "line": 25,
    "message": "'a' is assigned a value but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
    "suggestions": Array [
      Object {
        "data": Object {
          "varName": "a",
        },
        "desc": "Remove unused variable 'a'.",
        "fix": Object {
          "range": Array [
            484,
            490,
          ],
          "text": "",
        },
        "messageId": "removeVar",
      },
    ],
  },
  Object {
    "column": 27,
    "endColumn": 28,
    "endLine": 25,
    "line": 25,
    "message": "'b' is assigned a value but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
    "suggestions": Array [
      Object {
        "data": Object {
          "varName": "b",
        },
        "desc": "Remove unused variable 'b'.",
        "fix": Object {
          "range": Array [
            489,
            505,
          ],
          "text": "",
        },
        "messageId": "removeVar",
      },
    ],
  },
  Object {
    "column": 37,
    "endColumn": 38,
    "endLine": 25,
    "line": 25,
    "message": "'c' is assigned a value but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
    "suggestions": Array [
      Object {
        "data": Object {
          "varName": "c",
        },
        "desc": "Remove unused variable 'c'.",
        "fix": Object {
          "range": Array [
            505,
            513,
          ],
          "text": "",
        },
        "messageId": "removeVar",
      },
    ],
  },
  Object {
    "column": 43,
    "endColumn": 53,
    "endLine": 25,
    "line": 25,
    "message": "'getASTNode' is not defined.",
    "messageId": "undef",
    "nodeType": "Identifier",
    "ruleId": "no-undef",
    "severity": 2,
  },
  Object {
    "column": 7,
    "endColumn": 10,
    "endLine": 30,
    "line": 30,
    "message": "'obj' is assigned a value but never used.",
    "messageId": "unusedVar",
    "nodeType": "Identifier",
    "ruleId": "no-unused-vars",
    "severity": 2,
    "suggestions": Array [
      Object {
        "data": Object {
          "varName": "obj",
        },
        "desc": "Remove unused variable 'obj'.",
        "fix": Object {
          "range": Array [
            593,
            888,
          ],
          "text": "",
        },
        "messageId": "removeVar",
      },
    ],
  },
  Object {
    "column": 3,
    "endColumn": 5,
    "endLine": 31,
    "fix": Object {
      "range": Array [
        609,
        611,
      ],
      "text": "",
    },
    "line": 31,
    "message": "Delete \`··\`",
    "messageId": "delete",
    "nodeType": null,
    "ruleId": "@swissquote/swissquote/prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 3,
    "endLine": 32,
    "fix": Object {
      "range": Array [
        624,
        626,
      ],
      "text": "",
    },
    "line": 32,
    "message": "Delete \`··\`",
    "messageId": "delete",
    "nodeType": null,
    "ruleId": "@swissquote/swissquote/prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 16,
    "endColumn": 27,
    "endLine": 32,
    "line": 32,
    "message": "'theProtoObj' is not defined.",
    "messageId": "undef",
    "nodeType": "Identifier",
    "ruleId": "no-undef",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 5,
    "endLine": 33,
    "fix": Object {
      "range": Array [
        654,
        656,
      ],
      "text": "",
    },
    "line": 33,
    "message": "Delete \`··\`",
    "messageId": "delete",
    "nodeType": null,
    "ruleId": "@swissquote/swissquote/prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 3,
    "endLine": 34,
    "fix": Object {
      "range": Array [
        698,
        700,
      ],
      "text": "",
    },
    "line": 34,
    "message": "Delete \`··\`",
    "messageId": "delete",
    "nodeType": null,
    "ruleId": "@swissquote/swissquote/prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 5,
    "endLine": 35,
    "fix": Object {
      "range": Array [
        716,
        718,
      ],
      "text": "",
    },
    "line": 35,
    "message": "Delete \`··\`",
    "messageId": "delete",
    "nodeType": null,
    "ruleId": "@swissquote/swissquote/prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 3,
    "endLine": 36,
    "fix": Object {
      "range": Array [
        729,
        731,
      ],
      "text": "",
    },
    "line": 36,
    "message": "Delete \`··\`",
    "messageId": "delete",
    "nodeType": null,
    "ruleId": "@swissquote/swissquote/prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 6,
    "endLine": 37,
    "fix": Object {
      "range": Array [
        750,
        751,
      ],
      "text": "",
    },
    "line": 37,
    "message": "Delete \`·\`",
    "messageId": "delete",
    "nodeType": null,
    "ruleId": "@swissquote/swissquote/prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 5,
    "endColumn": 20,
    "endLine": 38,
    "fix": Object {
      "range": Array [
        770,
        785,
      ],
      "text": "return \`d \${",
    },
    "line": 38,
    "message": "Replace \`·return·\`d·\${··\` with \`return·\`d·\${\`",
    "messageId": "replace",
    "nodeType": null,
    "ruleId": "@swissquote/swissquote/prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 5,
    "endLine": 39,
    "fix": Object {
      "range": Array [
        807,
        809,
      ],
      "text": "",
    },
    "line": 39,
    "message": "Delete \`··\`",
    "messageId": "delete",
    "nodeType": null,
    "ruleId": "@swissquote/swissquote/prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 3,
    "endLine": 40,
    "fix": Object {
      "range": Array [
        812,
        814,
      ],
      "text": "",
    },
    "line": 40,
    "message": "Delete \`··\`",
    "messageId": "delete",
    "nodeType": null,
    "ruleId": "@swissquote/swissquote/prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 3,
    "endColumn": 5,
    "endLine": 41,
    "fix": Object {
      "range": Array [
        855,
        857,
      ],
      "text": "",
    },
    "line": 41,
    "message": "Delete \`··\`",
    "messageId": "delete",
    "nodeType": null,
    "ruleId": "@swissquote/swissquote/prettier/prettier",
    "severity": 2,
  },
  Object {
    "column": 1,
    "endColumn": 1,
    "endLine": 44,
    "fix": Object {
      "range": Array [
        889,
        890,
      ],
      "text": "",
    },
    "line": 43,
    "message": "Delete \`⏎\`",
    "messageId": "delete",
    "nodeType": null,
    "ruleId": "@swissquote/swissquote/prettier/prettier",
    "severity": 2,
  },
]`;

exports[`jsx-no-duplicate-props: works fails with the same prop//0`] = `Array [
  Object {
    "column": 21,
    "endColumn": 26,
    "endLine": 2,
    "line": 2,
    "message": "This JSX property is assigned multiple times.",
    "messageId": "noDuplicateJsxProps",
    "nodeType": "JSXAttribute",
    "ruleId": "@swissquote/swissquote/@eslint-react/no-duplicate-jsx-props",
    "severity": 1,
  },
]`;

exports[`no-did-mount-set-state: fails with setState in componentDidMount//0`] = `Array [
  Object {
    "column": 5,
    "endColumn": 7,
    "endLine": 8,
    "line": 6,
    "message": "Do not call \`this.setState\` in \`componentDidMount\` outside of functions, such as callbacks.",
    "messageId": "noSetStateInComponentDidMount",
    "nodeType": "CallExpression",
    "ruleId": "@swissquote/swissquote/@eslint-react/no-set-state-in-component-did-mount",
    "severity": 2,
  },
  Object {
    "column": 13,
    "endColumn": 22,
    "endLine": 15,
    "line": 15,
    "message": "[Deprecated] Use TypeScript or another type-checking solution instead.",
    "messageId": "noPropTypes",
    "nodeType": "Identifier",
    "ruleId": "@swissquote/swissquote/@eslint-react/no-prop-types",
    "severity": 2,
  },
]`;
